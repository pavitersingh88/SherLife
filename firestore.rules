rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }

    // Marketplace listings
    match /listings/{listingId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        resource.data.sellerId == request.auth.uid;
    }

    // Chats
    match /chats/{chatId} {
      allow read: if isAuthenticated() && 
        request.auth.uid in resource.data.participants;
      allow create: if isAuthenticated() &&
        request.auth.uid in request.resource.data.participants;
    }

    // Events
    match /events/{eventId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        resource.data.organizerId == request.auth.uid;
    }

    // Confessions
    match /confessions/{confessionId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
    }

    // Votes
    match /votes/{voteId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
    }
  }
} 